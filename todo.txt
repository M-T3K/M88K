**********************************************************
Annotations:
**********************************************************

- @Bug: Bug that needs fixing.
- @Improv: Improvement
- @Issue: High Priority Bug/Glitch/Improvement/Etc
- @Feature: Feature to implement.
- @Test: Requires Testing or is related to Testing (such as 
  improvement of already defined tests)

==========================================================
TODO LIST
==========================================================

- Add Screenshots and gifs to README
- @Feature: Spanish Language Support: since most of the community that will be 
  using this extension, I think it would be a good idea to have native Spanish 
  support linked to either the language of the editor itself or a separate setting
  for the extension.
- @Feature: Automatic Selection (If nothing is selected then the 
  extension should automatically select up to the previous whitespace char).
- @Feature: Matrix Generation (with specified dimensions, and support for random
  as well as specified numbers.)
- @Feature: Instruction Count.
- @Feature: Add Intellisense (Auto-complete / suggestions)
- @Feature: Emulator.
- @Feature: Debugging Support.


**********************************************************
                      Next Update
**********************************************************     


-@Improv: Improved the consistency of the code by making most inline functions arrow functions.
 This is part 2 of the consistency refactor. Before this, the only ones using arrow functions were 
 the tests. 
- @Improv: Remove unnecessary OOP like Utils. Classes should hold data. If we don't use Classes
  as Data Structures, we might as well not use them.

==========================================================
                          DONE
==========================================================

- @Feature: There is a setting for the Default Endianness to use with the extension.
- @Improv: (For Internal usage) RemoveWhitespace Function.
- @Feature: Add Setting for Endianness Mode (So that it stays 
  consistent with what the user wants, specified in settings.json)
- @Feature: autoclose and autosurround works with most types of braces.
- @Feature: Comment keybindings now work for m88k files.
- @Bug: Number Conversion not working with Negative numbers. 
  :Update
  ** Negative Decimal to Hexadecimal now works. However, it is very difficult 
  to convert Negative Hexadecimal back to Decimal. Reason being is that it 
  can't be done consistently (it is very difficult to know the MSB) as far 
  as I am aware unless you put a - sign in front.
  ** Negative Hexadecimal to Decimal is working. You need to implicitly add a '-'
  in front of the number.
- @Test: Add Unit Tests (Unit tests work great for small things like this).
- @Improv: Change Language Name from m88k assembly to M88K.
- @Improv: Make it so that the activation event is also 'onLanguage::m88K'.
- @Feature: Endianness Mode at the Global Scope.
- @Feature: Snippets
- @Feature: Syntax Highlighting.
- @Feature: Change Endianness of selected hex number
- @Feature: addHex() to add '0x' to any selected text.